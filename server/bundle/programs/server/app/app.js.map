{"version":3,"sources":["meteor://💻app/app/cors/server/cors.coffee","meteor://💻app/tailwind.config.js"],"names":["cors","error","origin","originEnv","parseOrigin","require","originsArray","test","RegExp","slice","startsWith","endsWith","JSON","parse","map","item","Error","process","env","STEEDOS_CORS_ORIGIN","console","log","error1","message","WebApp","rawConnectHandlers","use","req","res","next","buf","ref","_body","headers","isNaN","setEncoding","on","chunk","err","Steedos","debugLevel","green","method","url","body","credentials","setHeader","toUpperCase","key","val","toLowerCase","apply","arguments","module","exports","corePlugins","preflight","content","theme","extend","plugins"],"mappings":"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","file":"/app.js","sourcesContent":["# Adding CORS headers so we can use CDNs for static content\ncors = require(\"cors\");\nparseOrigin = (originEnv) ->\n    if originEnv is 'true'\n        true\n    else if originEnv is 'false'\n        false\n    else if /^\\/.*\\/$/.test(originEnv)\n        new RegExp(originEnv.slice(1, -1)) # 去掉两边的斜杠\n    else if originEnv.startsWith('[') && originEnv.endsWith(']')\n        originsArray = JSON.parse(originEnv)\n        originsArray.map (item) ->\n            if typeof item is 'string'\n                item\n            else if /^\\/.*\\/$/.test(item)\n                new RegExp(item.slice(1, -1))\n            else\n                throw new Error 'Invalid origin value in array'\n    else if typeof originEnv is 'string'\n        originEnv\n    else\n        throw new Error 'Invalid origin value'\n\noriginEnv = process.env.STEEDOS_CORS_ORIGIN\norigin = true\ntry\n    origin = parseOrigin(originEnv)\n    console.log 'Parsed origin:', origin\ncatch error\n    console.error 'Error parsing origin:', error.message\n\n\n# Try to parse all request bodies as JSON\nWebApp.rawConnectHandlers.use (req, res, next) ->\n\tif req._body\n\t\treturn next()\n\n\tif req.headers['transfer-encoding'] is undefined and isNaN(req.headers['content-length'])\n\t\treturn next()\n\n\tif req.headers['content-type'] not in ['', undefined]\n\t\treturn next()\n\n\tbuf = ''\n\treq.setEncoding('utf8')\n\treq.on 'data', (chunk) -> buf += chunk\n\treq.on 'end', ->\n\t\tif Steedos?.debugLevel? and Steedos.debugLevel is 'debug'\n\t\t\tconsole.log '[request]'.green, req.method, req.url, '\\nheaders ->', req.headers, '\\nbody ->', buf\n\n\t\ttry\n\t\t\treq.body = JSON.parse(buf)\n\t\tcatch err\n\t\t\treq.body = buf\n\n\t\treq._body = true\n\t\tnext()\n\nWebApp.rawConnectHandlers.use(cors({origin: origin, credentials: true}));\n\nWebApp.rawConnectHandlers.use (req, res, next) ->\n\t#if /^\\/(api|_timesync|sockjs|tap-i18n)(\\/|$)/.test req.url\n\tmethod = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n\t# Block next handlers to override CORS with value http://meteor.local\n\tsetHeader = res.setHeader\n\tres.setHeader = (key, val) ->\n\t\tif key.toLowerCase() is 'access-control-allow-origin' and val is 'http://meteor.local'\n\t\t\treturn\n\t\treturn setHeader.apply @, arguments\n\n\treturn next()\n\n# _staticFilesMiddleware = WebAppInternals.staticFilesMiddleware\n# WebAppInternals._staticFilesMiddleware = (staticFiles, req, res, next) ->\n# \tres.setHeader(\"Access-Control-Allow-Origin\", \"*\")\n# \t_staticFilesMiddleware(staticFiles, req, res, next)\n\n\n","/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  corePlugins: {\n    preflight: false,\n  },\n  content: [\n    './app/**/*.{html,js}',\n    './packages/**/*.{html,js}',\n    './client/**/*.{html,js}',\n    './imports/**/*.{html,js}',\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n"]}